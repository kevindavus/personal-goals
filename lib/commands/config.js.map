{"version":3,"sources":["commands/config.js"],"names":["path","require","fs","Configstore","moment","date","defaultConf","dir","join","resolve","readme","types","focus","weekly","alias","w","week","m","month","y","year","o","title","monthly","format","yearly","today","tomorrow","add","conf","chalk","confFocus","get","confAliases","confTitles","confTypes","confDir","confReadme","module","exports","command","aliases","usage","description","examples","handler","argv","completedTask","maybeClear","maybeList","maybeAddType","maybeAddFocus","maybeAddAlias","maybeAddTitle","set","key","value","console","log","green","bold","checkConf","clearConf","all","includes","red","push","detail","Object","keys","forEach","splice","indexOf","type","delete","clear","pathExistsSync"],"mappings":"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","file":"config.js","sourcesContent":["// @flow\n\nconst path = require(\"path\");\nconst fs = require(\"fs-extra\");\nconst Configstore = require(\"configstore\");\nconst moment = require(\"moment\");\n\nconst date: moment$Moment = moment();\nconst defaultConf: {\n  alias: {\n    m?: string,\n    month?: string,\n    o?: string,\n    w?: string,\n    week?: string,\n    y?: string,\n    year?: string\n  },\n  dir?: string,\n  focus?: { weekly: string },\n  readme?: string,\n  title?: {\n    monthly?: string,\n    today?: string,\n    tomorrow?: string,\n    weekly?: string,\n    yearly?: string\n  },\n  types: [string, string, string, string]\n} = {\n  dir: path.join(path.resolve(), \"goals\"),\n  readme: path.resolve(),\n  types: [\"yearly\", \"weekly\", \"monthly\", \"other\"],\n  focus: {\n    weekly: \"Be Awesome.\"\n  },\n  alias: {\n    w: \"weekly\",\n    week: \"weekly\",\n    m: \"monthly\",\n    month: \"monthly\",\n    y: \"yearly\",\n    year: \"yearly\",\n    o: \"other\"\n  },\n  title: {\n    weekly: `Things I'll Do This Week`,\n    monthly: `Things I'll Do This Month (${date.format(\"MMMM YYYY\")}) `,\n    yearly: `Overarching Goals`,\n    today: ` Goals for ${date.format(\"dddd, MMMM Do YYYY\")}`,\n    tomorrow: `Goals for ${date.add(1, \"d\").format(\"dddd, MMMM Do YYYY\")}`\n  }\n};\nconst conf: Configstore = new Configstore(\"personal-goals-cli\", defaultConf);\nconst chalk = require(\"chalk\");\n\nconst confFocus: { weekly: string } = conf.get(\"focus\");\nconst confAliases: {\n  w: string,\n  o: string,\n  m: string,\n  y: string,\n  week: string,\n  month: string,\n  year: string\n} = conf.get(\"alias\");\nconst confTitles: {\n  weekly: string,\n  monthly: string,\n  yearly: string,\n  other: string,\n  today: string,\n  tomorrow: string\n} = conf.get(\"title\");\nconst confTypes: Array<string> = conf.get(\"types\");\nconst confDir: string = conf.get(\"dir\");\nconst confReadme: string = conf.get(\"readme\");\n\nmodule.exports = {\n  confFocus,\n  confTypes,\n  confTitles,\n  confAliases,\n  confDir,\n  confReadme,\n  command: {\n    command: \"config <key> [value] [detail]\",\n    aliases: [\"cfg\", \"conf\"],\n    usage: \"$0 config <key> [value]\",\n    description: \"Set up the personal goals configuration\",\n    examples: [\n      \"$0 cfg dir '/user/me/projects/personal-goals'\",\n      \"$0 config weeklyfocus 'get outside more'\"\n    ],\n    handler: (argv: { key: string, value: string, detail: string }) => {\n      let completedTask = false;\n      completedTask = completedTask || maybeClear(argv);\n      completedTask = completedTask || maybeList(argv);\n      completedTask = completedTask || maybeAddType(argv);\n      completedTask = completedTask || maybeAddFocus(argv);\n      completedTask = completedTask || maybeAddAlias(argv);\n      completedTask = completedTask || maybeAddTitle(argv);\n      if (!completedTask) {\n        conf.set(argv.key, argv.value);\n        console.log(chalk.green(\"Successfully updated green: \"));\n        console.log(chalk.bold(argv.key), \":\", conf.get(argv.key));\n      }\n    }\n  },\n\n  checkConf,\n\n  conf\n};\n\nconst maybeClear = argv => {\n  if (\n    argv.value === \"clear\" ||\n    argv.value === \"clr\" ||\n    argv.value === \"del\" ||\n    argv.value === \"delete\"\n  ) {\n    const value: string = argv.key;\n    const key: string = argv.value;\n    argv.value = value;\n    argv.key = key;\n    clearConf(argv);\n  } else if (\n    argv.key === \"clear\" ||\n    argv.key === \"clr\" ||\n    argv.key === \"del\" ||\n    argv.key === \"delete\"\n  ) {\n    clearConf(argv);\n    return true;\n  }\n};\n\nconst maybeList = argv => {\n  if (argv.key === \"ls\" || argv.key === \"get\") {\n    console.log(conf.all);\n    return true;\n  }\n};\n\nconst maybeAddType = argv => {\n  if (argv.key === \"type\" || argv.key === \"types\") {\n    if (confTypes.includes(argv.value)) {\n      console.log(\n        chalk.red(\"Error adding new type: \"),\n        chalk.bold(argv.value),\n        \" already exists as a type\"\n      );\n    } else if (typeof confAliases[argv.value] === \"string\") {\n      console.log(\n        chalk.red(\"Error adding new type: \"),\n        chalk.bold(argv.value),\n        \" already exists as an alias to \",\n        chalk.bold(confAliases[argv.value])\n      );\n    } else {\n      confTypes.push(argv.value);\n      conf.set(\"types\", confTypes);\n      console.log(confTypes);\n      return true;\n    }\n  }\n};\n\nconst maybeAddFocus = argv => {\n  if (argv.key === \"focus\" || argv.key === \"focuses\" || argv.key === \"foci\") {\n    if (confTypes.includes(argv.value)) {\n      confFocus[argv.value] = argv.detail;\n      conf.set(\"focus\", confFocus);\n    } else if (typeof confAliases[argv.value] === \"string\") {\n      confFocus[confAliases[argv.value]] = argv.detail;\n      conf.set(\"focus\", confFocus);\n      console.log(confFocus);\n      return true;\n    }\n  }\n};\n\nconst maybeAddAlias = argv => {\n  if (argv.key === \"alias\" || argv.key === \"aliases\") {\n    if (confTypes.includes(argv.value)) {\n      console.log(\n        chalk.red(\"Error adding new alias: \"),\n        chalk.bold(argv.value),\n        \" already exists as a type\"\n      );\n    } else if (typeof confAliases[argv.value] === \"string\") {\n      console.log(\n        chalk.red(\"Error adding new alias: \"),\n        chalk.bold(argv.value),\n        \" already exists as an alias to \",\n        chalk.bold(confAliases[argv.value])\n      );\n    } else {\n      confAliases[argv.value] = argv.detail;\n      conf.set(\"alias\", confAliases);\n      console.log(confAliases);\n      return true;\n    }\n  }\n};\n\nconst maybeAddTitle = argv => {\n  if (argv.key === \"title\" || argv.key === \"titles\") {\n    if (confTypes.includes(argv.value)) {\n      confTitles[argv.value] = argv.detail;\n      conf.set(\"titles\", confTitles);\n    } else if (typeof confAliases[argv.value] === \"string\") {\n      confTitles[confAliases[argv.value]] = argv.detail;\n      conf.set(\"title\", confTitles);\n      console.log(confTitles);\n      return true;\n    }\n  }\n};\n\nfunction clearConf(argv: { detail: string, key: string, value: string }): void {\n  if (typeof argv.value === \"string\") {\n    if (typeof argv.detail === \"string\") {\n      switch (argv.value) {\n        case \"focus\":\n        case \"focuses\":\n          if (confTypes.includes(argv.detail)) {\n            delete confFocus[argv.detail];\n            conf.set(\"focus\", confFocus);\n            console.log(confFocus);\n          } else if (typeof confAliases[argv.detail] === \"string\") {\n            delete confFocus[argv.detail];\n            conf.set(\"focus\", confFocus);\n            console.log(confFocus);\n          } else {\n            console.log(\n              chalk.red(\n                \"Error deleting \" + chalk.bold(argv.detail) + \" confFocus :\"\n              ),\n              chalk.bold(argv.detail),\n              \" not found as type or alias\"\n            );\n          }\n          break;\n        case \"title\":\n        case \"titles\":\n          if (confTypes.includes(argv.detail)) {\n            delete confTitles[argv.detail];\n            conf.set(\"title\", confTitles);\n            console.log(confTitles);\n          } else if (typeof confAliases[argv.detail] === \"string\") {\n            delete confTitles[argv.detail];\n            conf.set(\"title\", confTitles);\n            console.log(confTitles);\n          } else {\n            console.log(\n              chalk.red(\n                \"Error deleting \" + chalk.bold(argv.detail) + \" title :\"\n              ),\n              chalk.bold(argv.detail),\n              \" not found as type or alias\"\n            );\n          }\n          break;\n        case \"alias\":\n        case \"confAliases\":\n          if (typeof confAliases[argv.detail] === \"string\") {\n            delete confAliases[argv.detail];\n            conf.set(\"alias\", confAliases);\n            console.log(confAliases);\n          } else {\n            console.log(\n              chalk.red(\n                \"Error deleting \" + chalk.bold(argv.detail) + \" confFocus :\"\n              ),\n              chalk.bold(argv.detail),\n              \" not found as alias\"\n            );\n          }\n          break;\n        case \"types\":\n        case \"type\":\n          if (confTypes.includes(argv.detail)) {\n            Object.keys(confAliases).forEach((key: string) => {\n              if (confAliases[key] === argv.detail) {\n                delete confAliases[key];\n              }\n            });\n            confTypes.splice(confTypes.indexOf(argv.detail), 1);\n            conf.set(\"types\", confTypes);\n            conf.set(\"alias\", confAliases);\n            console.log(conf.all);\n          } else if (typeof confAliases[argv.detail] === \"string\") {\n            const type: string = confAliases[argv.detail];\n            Object.keys(confAliases).forEach((key: string) => {\n              if (confAliases[key] === type) {\n                delete confAliases[key];\n              }\n            });\n            confTypes.splice(confTypes.indexOf(type), 1);\n            conf.set(\"types\", confTypes);\n            conf.set(\"alias\", confAliases);\n            console.log(conf.all);\n          } else {\n            console.log(\n              chalk.red(\n                \"Error deleting \" + chalk.bold(argv.detail) + \" type :\"\n              ),\n              chalk.bold(argv.detail),\n              \" type not found\"\n            );\n          }\n          break;\n        default:\n          break;\n      }\n    } else {\n      conf.delete(argv.value);\n      console.log(conf.all);\n    }\n  } else {\n    conf.clear();\n    conf.set(defaultConf);\n    console.log(conf.all);\n  }\n}\n\nfunction checkConf(): void {\n  if (!fs.pathExistsSync(confDir)) {\n    console.log(\"setting working directory to \", path.resolve());\n    conf.set(\"dir\", path.resolve(\"goals\"));\n    conf.set(\"readme\", path.resolve());\n  }\n}\n"]}