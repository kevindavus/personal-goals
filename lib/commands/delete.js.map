{"version":3,"sources":["commands/delete.js"],"names":["type","checkConf","dir","getFileName","completedDir","path","join","fs","ensureDir","files","readdir","completedFiles","recursive","dirIsEmpty","length","completedDirIsEmpty","isEmpty","menu","Menu","bg","fg","width","reset","write","prettyName","forEach","add","item","on","close","label","deleteGoal","process","stdin","pipe","createStream","stdout","setRawMode","end","console","log","chalk","bold","red","err","error","require","confTypes","confAliases","confDir","ls","module","exports","command","aliases","desc","example","builder","yargs","default","handler","argv","includes","hasOwnProperty","goal","indexOf","substr","findCompletedFile","remove","then","Promise","reject","map","stat","stats","isDirectory","isFile"],"mappings":"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","file":"delete.js","sourcesContent":["// @flow\n\nconst path = require(\"path\");\nconst fs = require(\"fs-extra\");\nconst Menu = require(\"terminal-menu\");\nconst chalk = require(\"chalk\");\nconst recursive = require(\"recursive-readdir\");\nconst { prettyName, getFileName } = require(\"../utils/file\");\nconst { checkConf, confTypes, confAliases, confDir } = require(\"./config\");\nconst { ls } = require(\"./ls\");\nconst { write } = require(\"../utils/markdown\");\n\nmodule.exports = {\n  command: \"delete [type] [goal]\",\n  aliases: [\"d\", \"del\"],\n  desc: \"delete a goal\",\n  example: \"$0 d w \",\n  builder: (yargs: { default: (string, string) => mixed }) =>\n    yargs.default(\"type\", \"w\"),\n  handler: (argv: { type: string, goal: string }) => {\n    checkConf();\n\n    let type: string;\n    if (confTypes.includes(argv.type)) {\n      type = argv.type;\n    } else if (confAliases.hasOwnProperty(argv.type)) {\n      type = confAliases[argv.type];\n    } else {\n      type = argv.type;\n    }\n    if (argv.goal) {\n      deleteGoal(type, argv.goal);\n    } else {\n      menu(type);\n    }\n  }\n};\n\nfunction deleteGoal(type: string, goal: string) {\n  if (goal.indexOf(\"✔\") >= 0) {\n    goal = goal.substr(\"✔ \".length + 1);\n    type = path.join(\"completed\", type);\n    findCompletedFile(type, goal);\n  } else {\n    fs.remove(getFileName(type, goal)).then(() => {\n      ls(\"all\");\n      write();\n    });\n  }\n}\n\nasync function menu(type) {\n  checkConf();\n  const dir = getFileName(type, \"\");\n  const completedDir = getFileName(path.join(\"completed\", type));\n  await fs.ensureDir(completedDir);\n  await fs.ensureDir(dir);\n  const files = await fs.readdir(dir);\n  const completedFiles = await recursive(completedDir);\n  const dirIsEmpty = files.length === 0;\n  const completedDirIsEmpty = completedFiles.length === 0;\n  const isEmpty = dirIsEmpty && completedDirIsEmpty;\n  const menu = new Menu({ bg: \"black\", fg: \"white\", width: 100 });\n\n  menu.reset();\n  menu.write(\"Which \" + prettyName(type) + \" Goal would you like to delete?\\n\");\n  menu.write(\"-------------------------------------\\n\");\n  try {\n    if (!isEmpty) {\n      if (!dirIsEmpty) {\n        files.forEach(item => menu.add(prettyName(item)));\n      }\n      if (!completedDirIsEmpty) {\n        completedFiles.forEach(item => menu.add(\"✔︎ \" + prettyName(item)));\n      }\n      menu.add(\"None\");\n\n      menu.on(\"select\", label => {\n        menu.close();\n        if (label === \"None\") {\n          return;\n        }\n        deleteGoal(type, label);\n      });\n      process.stdin.pipe(menu.createStream()).pipe(process.stdout);\n\n      process.stdin.setRawMode(true);\n      menu.on(\"close\", () => {\n        process.stdin.setRawMode(false);\n        process.stdin.end();\n      });\n    } else {\n      console.log(\n        chalk.bold(chalk.red(\"Error: \")) + \" there are no goals of type \" + type\n      );\n    }\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction findCompletedFile(type, goal) {\n  const dir = path.join(confDir, type);\n  return fs.ensureDir(dir).then(() => {\n    return fs.readdir(dir).then(files => {\n      if (files.length === 0) {\n        fs.remove(dir).then(() => Promise.reject());\n      }\n      files.map(item => {\n        return fs.stat(path.join(dir, item)).then(stats => {\n          if (stats.isDirectory()) {\n            return findCompletedFile(path.join(type, item), goal);\n          } else if (stats.isFile()) {\n            if (prettyName(item) === prettyName(goal)) {\n              return fs.remove(dir).then(() => {\n                ls(\"all\");\n                write();\n              });\n            }\n          }\n        });\n      });\n    });\n  });\n}\n"]}